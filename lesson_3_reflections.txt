When would you want to use a remote repository rather than keeping all your work local?

Using a remote repository is great for collaborative work. A team can work together on projects online
at sites like Github.



Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Doing it manually gives you greater control. 

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks exist only on Github, while clones and branches exist both locally and in 
	Github. I would want to use a fork if  want to clone a repository on Github that I 
	want to work on without disturbing the orignal repository, while giving credit for the 
	repository source. 

	
What is the benefit of having a copy of the last known state of the remote
stored locally?

    This will enable you to compare your local copy and the remote copy.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    I've collaborated before on different places like Google Docs in combination with 
....Google Drive, Dropbox, and college
....servers. I've also collaborated on Github but without knowing how to use it well. With
....Google Docs, there is a lot of writing to describe what you've done. I didn't really like
    Dropbox because it seemed even more limited compared to Google's features. When I work on
    projects on my own, I like to keep journals of what I've done, in addition to the primitive 
....version-control in my local folders. I think that I can implement an easier system using 
    Github and journals.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here